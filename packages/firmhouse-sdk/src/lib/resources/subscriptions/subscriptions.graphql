mutation updateOrderedProduct($input: UpdateOrderedProductInput!) {
  updateOrderedProduct(input: $input) {
    orderedProduct {
      ...OrderedProductFragment
      subscription {
        ...SubscriptionFragment
        ...CompleteSubscriptionFields
      }
    }
  }
}

query getSubscription(
  $token: ID!
  $includeVerifiedIdentity: Boolean!
  $includeCollectionCases: Boolean!
  $includeOrders: Boolean!
  $ordersAfter: String
  $ordersBefore: String
  $ordersFirst: Int
  $ordersLast: Int
  $ordersIncludeOrderLines: Boolean!
  $ordersIncludePayment: Boolean!
  $ordersIncludeInvoice: Boolean!
  $includeInvoices: Boolean!
  $invoicesIncludeInvoiceLineItems: Boolean!
  $invoicesIncludePayment: Boolean!
  $invoicesIncludeOriginalInvoice: Boolean!
  $invoicesIncludeInvoiceReminders: Boolean!
  $invoicesIncludeCollectionCase: Boolean!
) {
  getSubscription(token: $token) {
    ...SubscriptionFragment
    ...CompleteSubscriptionFields
    collectionCases @include(if: $includeCollectionCases) {
      nodes {
        ...CollectionCaseFields
      }
    }

    verifiedIdentity @include(if: $includeVerifiedIdentity) {
      ...SubscriptionIdentityFields
    }

    ordersV2(
      after: $ordersAfter
      before: $ordersBefore
      first: $ordersFirst
      last: $ordersLast
    ) @include(if: $includeOrders) {
      nodes {
        ...OrderFields
        orderLines @include(if: $ordersIncludeOrderLines) {
          ...OrderLineFields
        }
        invoice @include(if: $ordersIncludeInvoice) {
          ...InvoiceFields
        }
        payment @include(if: $ordersIncludePayment) {
          ...PaymentFields
        }
      }
      pageInfo {
        ...PageInfoFragment
      }
      totalCount
    }
    invoices @include(if: $includeInvoices) {
      ...InvoiceFields
      invoiceLineItems @include(if: $invoicesIncludeInvoiceLineItems) {
        ...InvoiceLineItemFields
      }
      payment @include(if: $invoicesIncludePayment) {
        ...PaymentFields
      }
      originalInvoice @include(if: $invoicesIncludeOriginalInvoice) {
        ...InvoiceFields
      }
      invoiceReminders @include(if: $invoicesIncludeInvoiceReminders) {
        ...InvoiceReminderFields
      }
      collectionCase @include(if: $invoicesIncludeCollectionCase) {
        ...CollectionCaseFields
      }
    }
  }
}

query getSubscriptionBySelfServiceCenterLoginToken($token: ID!) {
  getSubscriptionBySelfServiceCenterLoginToken(token: $token) {
    ...SubscriptionFragment
    ...CompleteSubscriptionFields
  }
}

mutation cancelSubcscription($input: CancelSubscriptionInput!) {
  cancelSubscription(input: $input) {
    subscription {
      ...SubscriptionFragment
      ...CompleteSubscriptionFields
    }
    errors {
      ...ModelValidationErrorFragment
    }
  }
}

mutation pauseSubscription($input: PauseSubscriptionInput!) {
  pauseSubscription(input: $input) {
    subscription {
      ...SubscriptionFragment
      ...CompleteSubscriptionFields
    }
    errors {
      ...ModelValidationErrorFragment
    }
  }
}

mutation resumeSubscription($input: ResumeSubscriptionInput!) {
  resumeSubscription(input: $input) {
    subscription {
      ...SubscriptionFragment
      ...CompleteSubscriptionFields
    }
    errors {
      ...ModelValidationErrorFragment
    }
  }
}

mutation createOrderedProduct($input: CreateOrderedProductInput!) {
  createOrderedProduct(input: $input) {
    subscription {
      ...SubscriptionFragment
      ...CompleteSubscriptionFields
    }
    orderedProduct {
      ...OrderedProductFragment
    }
  }
}

mutation destroyOrderedProduct($input: DestroyOrderedProductInput!) {
  destroyOrderedProduct(input: $input) {
    subscription {
      ...SubscriptionFragment
      ...CompleteSubscriptionFields
    }
    orderedProduct {
      ...OrderedProductFragment
    }
  }
}

mutation updatePlan($input: UpdatePlanInput!) {
  updatePlan(input: $input) {
    subscription {
      ...SubscriptionFragment
      ...CompleteSubscriptionFields
    }
  }
}

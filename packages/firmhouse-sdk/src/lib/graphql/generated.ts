import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  ISO8601Date: { input: string; output: string; }
  ISO8601DateTime: { input: string; output: string; }
  JSON: { input: unknown; output: unknown; }
};

export enum AcceptanceCheckStatus {
  /** Acceptance check has passed. */
  Accepted = 'ACCEPTED',
  /** Acceptance checks is pending. */
  Pending = 'PENDING',
  /** Acceptance check is rejected. */
  Rejected = 'REJECTED'
}

/** Autogenerated input type of ActivateSubscription */
export type ActivateSubscriptionInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  /** ID of the inactive subscription to activate. */
  id: Scalars['ID']['input'];
};

export enum AppliedPromotionDeactivationStrategy {
  /** Gets deactivated when used x number or times. */
  Times = 'TIMES',
  /** Gets deactivated after a monetary limit has been reached. */
  Value = 'VALUE'
}

/** Autogenerated input type of ApplyPromotionToSubscription */
export type ApplyPromotionToSubscriptionInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  /** ID of the promotion to apply. */
  promotionId: Scalars['ID']['input'];
  /** ID of the subscription to apply the promotion to. */
  subscriptionId: Scalars['ID']['input'];
};

/** Input type for creating custom field answers for an asset */
export type AssetCustomFieldInput = {
  /** ID of the asset custom field the value is for. */
  assetCustomFieldId: Scalars['ID']['input'];
  /** The value for the custom field. */
  value: Scalars['String']['input'];
};

export enum AssetStatus {
  /** The asset is at the customer. */
  AtCustomer = 'AT_CUSTOMER',
  /** The asset is available for assignment. */
  Available = 'AVAILABLE',
  /** The asset is currently in refurbishment */
  InRefurbishment = 'IN_REFURBISHMENT',
  /** The asset has been lost. */
  Lost = 'LOST',
  /** The asset is purchased by a customer. */
  Purchased = 'PURCHASED',
  /** The asset is scrapped. */
  Scrapped = 'SCRAPPED'
}

export enum BaseIntervalUnit {
  /** Interval period in days. */
  Days = 'DAYS',
  /** Interval period in months. */
  Months = 'MONTHS',
  /** Interval period in seconds (used for default or for 0-x intervals). */
  Seconds = 'SECONDS',
  /** Interval period in weeks. */
  Weeks = 'WEEKS',
  /** Interval period in years. */
  Years = 'YEARS'
}

export enum BillingCycleIntervalUnit {
  /** The billing cycle interval is specified in days. */
  Days = 'DAYS',
  /** The billing cycle interval is specified in months. */
  Months = 'MONTHS',
  /** The billing cycle interval is specified in weeks. */
  Weeks = 'WEEKS',
  /** The billing cycle interval is specified in years. */
  Years = 'YEARS'
}

/** Autogenerated input type of CancelReturnOrder */
export type CancelReturnOrderInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  externalStatus?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['ID']['input'];
};

/** Autogenerated input type of CancelSubscription */
export type CancelSubscriptionInput = {
  /** Why did this customer decide to cancel? */
  cancellationNotes?: InputMaybe<Scalars['String']['input']>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  /** The ID of the subscription to cancel, only needed if a project access token is used. */
  id?: InputMaybe<Scalars['ID']['input']>;
  /** Skip sending the standard cancellation confirmation email to the customer. */
  skipCancellationConfirmationEmail?: InputMaybe<Scalars['Boolean']['input']>;
  /** If two-step cancellation is enabled it can be skipped */
  skipTwoStepCancellation?: InputMaybe<Scalars['Boolean']['input']>;
  /** The token of the subscription to cancel, only needed if a project access token is used. */
  token?: InputMaybe<Scalars['ID']['input']>;
};

export enum CollectionCaseStatus {
  /** The collection case is is closed. */
  Closed = 'CLOSED',
  /** The collection case is still open. */
  Open = 'OPEN'
}

export enum CommitmentUnit {
  /** The period in days. */
  Days = 'DAYS',
  /** The period in months. */
  Months = 'MONTHS',
  /** The period in weeks. */
  Weeks = 'WEEKS',
  /** The period in years. */
  Years = 'YEARS'
}

/** Autogenerated input type of CompleteReturnOrder */
export type CompleteReturnOrderInput = {
  cancelSubscription?: InputMaybe<Scalars['Boolean']['input']>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  externalStatus?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['ID']['input'];
  returnedOn: Scalars['ISO8601Date']['input'];
};

/** Autogenerated input type of CompleteSubscriptionCancellation */
export type CompleteSubscriptionCancellationInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  /** The ID of the cancellation_in_progress subscription to complete cancellation for, only needed if a project access token is used. */
  id?: InputMaybe<Scalars['ID']['input']>;
  /** The token of the cancellation_in_progress subscription to complete cancellation for, only needed if a project access token is used. */
  token?: InputMaybe<Scalars['ID']['input']>;
};

/** Autogenerated input type of CreateAsset */
export type CreateAssetInput = {
  /** Associated custom field values for this asset. */
  assetCustomFields?: InputMaybe<Array<AssetCustomFieldInput>>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  /** Date on which the asset is expected to be available. */
  expectedAvailabilityOn?: InputMaybe<Scalars['ISO8601Date']['input']>;
  /** Optional additional number used to identify the asset */
  externalNumber?: InputMaybe<Scalars['String']['input']>;
  /** Mandatory number used to identify the asset */
  internalNumber: Scalars['String']['input'];
  /** Additional information about the specific asset */
  notes?: InputMaybe<Scalars['String']['input']>;
  /** The ID of the product for this asset */
  productId: Scalars['ID']['input'];
  /** Status of this asset (available, at_customer, purchased, in_refurbishment or scrapped). */
  status?: InputMaybe<AssetStatus>;
  /** The ID of the subscription to assign this asset to */
  subscriptionId?: InputMaybe<Scalars['ID']['input']>;
};

/** Autogenerated input type of CreateCart */
export type CreateCartInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated input type of CreateDiscountCode */
export type CreateDiscountCodeInput = {
  /** The discount code can only be applied to this plan */
  autoSelectPlanId?: InputMaybe<Scalars['ID']['input']>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  /** The code that can be applied when creating a subscription */
  code: Scalars['String']['input'];
  /** The max times this discount code can be used */
  maxTimesUsed: Scalars['Int']['input'];
  /** Metadata that can be used by developers to store additional information on objects. */
  metadata?: InputMaybe<Scalars['JSON']['input']>;
  /** The promotion to attach to this discount code */
  promotionId: Scalars['ID']['input'];
};

/** Autogenerated input type of CreateInvoiceLineItem */
export type CreateInvoiceLineItemInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  /** The description of this invoice line item. */
  description?: InputMaybe<Scalars['String']['input']>;
  /** The ID of the invoice for this item */
  invoiceId: Scalars['ID']['input'];
  /** Indicates what this line item is charging for */
  lineItemType?: InputMaybe<LineItemTypeEnum>;
  /** The associated product in case of a product charge */
  productId?: InputMaybe<Scalars['ID']['input']>;
  /** Quantity for this line item */
  quantity: Scalars['Int']['input'];
  /** Unit price in cents */
  unitPriceCents?: InputMaybe<Scalars['Int']['input']>;
};

/** Autogenerated input type of CreateOrder */
export type CreateOrderInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  returnUrl?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated input type of CreateOrderedProduct */
export type CreateOrderedProductInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  /** A custom price in cents for this ordered product, if left blank the default product price will be used */
  customPriceCents?: InputMaybe<Scalars['Int']['input']>;
  ensureNewRecord?: InputMaybe<Scalars['Boolean']['input']>;
  /** ID of this ordered product. This will be ignored on create action. */
  id?: InputMaybe<Scalars['ID']['input']>;
  /** The amount of time in units between shipments of this order */
  interval?: InputMaybe<Scalars['Int']['input']>;
  /** The time measure for interval units. This argument is deprecated. Use intervalUnitOfMeasureType instead. If intervalUnitOfMeasureType passed, this field will be ignored. */
  intervalUnitOfMeasure?: InputMaybe<Scalars['String']['input']>;
  /** The time measure for interval units */
  intervalUnitOfMeasureType?: InputMaybe<OrderedProductIntervalUnitOfMeasure>;
  /** Metadata that can be used by developers to store additional information on objects. */
  metadata?: InputMaybe<Scalars['JSON']['input']>;
  /** This argument is deprecated. Use direct arguments on this mutation instead. If you pass this field, direct arguments will be ignored. */
  orderedProduct?: InputMaybe<OrderedProductInput>;
  /** ID for the related product */
  productId?: InputMaybe<Scalars['ID']['input']>;
  /** The quantity for this ordered product. */
  quantity?: InputMaybe<Scalars['Int']['input']>;
  /** The next date on which a new order should get initiated */
  shipmentDate?: InputMaybe<Scalars['ISO8601Date']['input']>;
  /** Use this field to look up the associated product based on Shopify Variant ID. */
  shopifyVariantId?: InputMaybe<Scalars['ID']['input']>;
  /** Use this field to look up the associated product based on SKU. */
  sku?: InputMaybe<Scalars['String']['input']>;
  /** Use this field to look up the associated product based on slug. */
  slug?: InputMaybe<Scalars['String']['input']>;
  /** ID of the subscription to create this OrderedProduct for. Required if authenticated via a project access token */
  subscriptionId?: InputMaybe<Scalars['ID']['input']>;
};

/** Autogenerated input type of CreateProduct */
export type CreateProductInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  eligibleForDiscount?: InputMaybe<Scalars['Boolean']['input']>;
  graceCancellationEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  graceCancellationPeriod?: InputMaybe<Scalars['Int']['input']>;
  graceCancellationUnit?: InputMaybe<Scalars['String']['input']>;
  initialShipmentDelay?: InputMaybe<Scalars['Int']['input']>;
  initialShipmentDelayUnitOfMeasure?: InputMaybe<Scalars['String']['input']>;
  interval?: InputMaybe<Scalars['Int']['input']>;
  intervalUnitOfMeasure?: InputMaybe<Scalars['String']['input']>;
  maximumCommitmentEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  maximumCommitmentPeriod?: InputMaybe<Scalars['Int']['input']>;
  maximumCommitmentUnit?: InputMaybe<Scalars['String']['input']>;
  /** Metadata that can be used by developers to store additional information on objects. */
  metadata?: InputMaybe<Scalars['JSON']['input']>;
  minimumCommitmentEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  minimumCommitmentPeriod?: InputMaybe<Scalars['Int']['input']>;
  minimumCommitmentUnit?: InputMaybe<Scalars['String']['input']>;
  priceCents: Scalars['Int']['input'];
  productType?: InputMaybe<Scalars['String']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  supplier?: InputMaybe<Scalars['String']['input']>;
  taxRateId: Scalars['ID']['input'];
  title: Scalars['String']['input'];
};

/** Autogenerated input type of CreatePromotion */
export type CreatePromotionInput = {
  /** Whether or not this promotion will automatically be applied on checkout */
  autoApply?: InputMaybe<Scalars['Boolean']['input']>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  /** The amount (in cents) after which the promotion should get deactivated on a customer */
  deactivateAfterAmountIncludingTaxCents?: InputMaybe<Scalars['Int']['input']>;
  /** After how many times this promotion is "used up" for a customer */
  deactivateAfterTimes?: InputMaybe<Scalars['Int']['input']>;
  /** Which mechanism will be used to deactivate the promotion */
  deactivationStrategy?: InputMaybe<AppliedPromotionDeactivationStrategy>;
  /** The percentage of discount that this promotion gives. */
  percentDiscount: Scalars['Int']['input'];
  /** Alternative name to be displayed on invoices and checkout. */
  publicName?: InputMaybe<Scalars['String']['input']>;
  /** The title of the promotion as it will appear on invoices and in the portal. */
  title: Scalars['String']['input'];
};

/** Autogenerated input type of CreateReturnOrder */
export type CreateReturnOrderInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  externalReference?: InputMaybe<Scalars['String']['input']>;
  externalStatus?: InputMaybe<Scalars['String']['input']>;
  externalUrl?: InputMaybe<Scalars['String']['input']>;
  intervalUnitOfMeasure?: InputMaybe<Scalars['String']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  returnDate?: InputMaybe<Scalars['ISO8601Date']['input']>;
  returnOrderProducts?: InputMaybe<Array<ReturnOrderProductInput>>;
  /** ID of the subscription to create a return order for. */
  subscriptionId: Scalars['ID']['input'];
  trackingCode?: InputMaybe<Scalars['String']['input']>;
  trackingUrl?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated input type of CreateSelfServiceCenterLoginToken */
export type CreateSelfServiceCenterLoginTokenInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  email: Scalars['String']['input'];
  returnUrl: Scalars['String']['input'];
};

/** Autogenerated input type of CreateSubscriptionFromCart */
export type CreateSubscriptionFromCartInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  /** The URL where the user can sign up for a new subscription */
  paymentPageUrl: Scalars['String']['input'];
  /** The URL the user gets redirected to after completing payment */
  returnUrl: Scalars['String']['input'];
};

/** Autogenerated input type of CreateSubscription */
export type CreateSubscriptionInput = {
  /** The time the subscription was activated. */
  activatedAt?: InputMaybe<Scalars['ISO8601DateTime']['input']>;
  /** The customer's address line or street. */
  address?: InputMaybe<Scalars['String']['input']>;
  /** The Adyen shopper reference being used for charges. */
  adyenShopperReference?: InputMaybe<Scalars['String']['input']>;
  /** The customer's billing address address line or street. */
  billToAddress?: InputMaybe<Scalars['String']['input']>;
  /** The customer's billing address city or town. */
  billToCity?: InputMaybe<Scalars['String']['input']>;
  /** The company name of the customer's billing address. */
  billToCompanyName?: InputMaybe<Scalars['String']['input']>;
  /** The customer's billing address country code (ISO3661). */
  billToCountry?: InputMaybe<Scalars['String']['input']>;
  /** The customer's billing address district. */
  billToDistrict?: InputMaybe<Scalars['String']['input']>;
  /** The customer's billing address house, building, or appartment number. */
  billToHouseNumber?: InputMaybe<Scalars['String']['input']>;
  /** The customer's billing address last name. */
  billToLastName?: InputMaybe<Scalars['String']['input']>;
  /** The customer's billing address first name. */
  billToName?: InputMaybe<Scalars['String']['input']>;
  /** The customer's billing address phone number (international format). */
  billToPhoneNumber?: InputMaybe<Scalars['String']['input']>;
  /** The customer's billing address salutation (mr,ms,mx). */
  billToSalutation?: InputMaybe<Scalars['String']['input']>;
  /** The customer's billing address state or province (ISO3661-2). */
  billToState?: InputMaybe<Scalars['String']['input']>;
  /** The customer's billing address zip code or postal code. */
  billToZipcode?: InputMaybe<Scalars['String']['input']>;
  /** The time the subscription started the cancellation process (with two-step cancellation) */
  cancellationStartedAt?: InputMaybe<Scalars['ISO8601DateTime']['input']>;
  /** The time the subscription was (fully) cancelled. */
  cancelledAt?: InputMaybe<Scalars['ISO8601DateTime']['input']>;
  /** The day of the month when the customer is charged. */
  chargeDayOfTheMonth?: InputMaybe<Scalars['Int']['input']>;
  /** The customer's city or town. */
  city?: InputMaybe<Scalars['String']['input']>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  /** The company name of the customer. */
  companyName?: InputMaybe<Scalars['String']['input']>;
  /** The customer's country code (ISO3661). */
  country?: InputMaybe<Scalars['String']['input']>;
  /** The field that can be used for your internal reference. For example, internal customer id. */
  customerReference?: InputMaybe<Scalars['String']['input']>;
  /** The customer's date of birth (yyyy-mm-dd). */
  dateOfBirth?: InputMaybe<Scalars['ISO8601Date']['input']>;
  /** Whether billing and shipping addresses are the same. Set this flag to `true` to store a separate billing address. */
  differentBillingAddress?: InputMaybe<Scalars['Boolean']['input']>;
  /** Discount code to apply when signing up */
  discountCode?: InputMaybe<Scalars['String']['input']>;
  /** The customer's district. */
  district?: InputMaybe<Scalars['String']['input']>;
  /** The customer's email address. */
  email?: InputMaybe<Scalars['String']['input']>;
  /** Extra field values for the subscription. */
  extraFields?: InputMaybe<Array<ExtraFieldInput>>;
  /** The customer's house, building, or appartment number. */
  houseNumber?: InputMaybe<Scalars['String']['input']>;
  /** Unique ID for an imported subscription. */
  importedSubscriptionId?: InputMaybe<Scalars['String']['input']>;
  /** The customer's last name. */
  lastName?: InputMaybe<Scalars['String']['input']>;
  /** The customer's language/locale. Must be enabled on the project. */
  locale?: InputMaybe<Scalars['String']['input']>;
  /** Time time the subscription was marked as non-paying. */
  markedAsNonPayingAt?: InputMaybe<Scalars['ISO8601DateTime']['input']>;
  /** Whether the customer accepted optional marketing communication opt-in. */
  marketingOptIn?: InputMaybe<Scalars['Boolean']['input']>;
  /** Metadata that can be used by developers to store additional information on objects. */
  metadata?: InputMaybe<Scalars['JSON']['input']>;
  /** The Mollie Customer ID (cst_XXX) */
  mollieCustomerId?: InputMaybe<Scalars['String']['input']>;
  /** The customer's first name. */
  name?: InputMaybe<Scalars['String']['input']>;
  /** Moment when the next billing cycle will be run, only available for  plan based subscription that use the flexible biling cycle */
  nextBillingDate?: InputMaybe<Scalars['ISO8601Date']['input']>;
  /** Notes specific for this subscription */
  notes?: InputMaybe<Scalars['String']['input']>;
  /** The products to subscribe to */
  orderedProducts?: InputMaybe<Array<OrderedProductInput>>;
  /** The URL of the page where your customer can re-initiate the checkout flow if something fails. */
  paymentPageUrl: Scalars['String']['input'];
  /** The customer's phone number (international format). */
  phoneNumber?: InputMaybe<Scalars['String']['input']>;
  /** The plan the customer will subscribe to. */
  planId?: InputMaybe<Scalars['ID']['input']>;
  projectToken?: InputMaybe<Scalars['ID']['input']>;
  /** Additional payment service provider specific properties used for payment creation. */
  pspPaymentProperties?: InputMaybe<Scalars['JSON']['input']>;
  /** The URL the customer gets redirected to when signup or initial payment was succesful. */
  returnUrl: Scalars['String']['input'];
  /** The customer's salutation (mr,ms,mx). */
  salutation?: InputMaybe<Scalars['String']['input']>;
  /** The time when the signup was completed. */
  signupCompletedAt?: InputMaybe<Scalars['ISO8601DateTime']['input']>;
  /** Don't automatically activate the subscription on signup. */
  skipAutoActivationOnSignup?: InputMaybe<Scalars['Boolean']['input']>;
  /** The customer's state or province (ISO3661-2). */
  state?: InputMaybe<Scalars['String']['input']>;
  /** The current status of the subscription. (default: inactive) */
  status?: InputMaybe<SubscriptionStatus>;
  /** The Stripe Customer ID (cus_XXX) */
  stripeCustomerId?: InputMaybe<Scalars['String']['input']>;
  /** The Stripe Payment Method ID of the active payment method to charge. (pm_XXX) */
  stripePaymentMethodId?: InputMaybe<Scalars['String']['input']>;
  /** Whether the customer accepted the terms and conditions. */
  termsAccepted?: InputMaybe<Scalars['Boolean']['input']>;
  /** The token of the subscription to update, or creates a new one if one doesn't exist. */
  token?: InputMaybe<Scalars['ID']['input']>;
  /** The number of months before the customer is charged for the first time. */
  trialPeriodMonths?: InputMaybe<Scalars['Int']['input']>;
  /** The company VAT number. */
  vatNumber?: InputMaybe<Scalars['String']['input']>;
  weChatOpenId?: InputMaybe<Scalars['String']['input']>;
  /** The customer's zip code or postal code. */
  zipcode?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated input type of DeactivateAppliedPromotion */
export type DeactivateAppliedPromotionInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  /** Id of the applied promotion that needs to be deactivated. */
  id: Scalars['ID']['input'];
};

/** Autogenerated input type of DestroyInvoiceLineItem */
export type DestroyInvoiceLineItemInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['ID']['input'];
};

/** Autogenerated input type of DestroyOrderedProduct */
export type DestroyOrderedProductInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['ID']['input'];
};

/** Autogenerated input type of EditPlan */
export type EditPlanInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['ID']['input'];
  /** Metadata that can be used by developers to store additional information on objects. */
  metadata?: InputMaybe<Scalars['JSON']['input']>;
};

/** Input type for creating extra field answers */
export type ExtraFieldInput = {
  /** ID of the extra field the value is for. */
  extraFieldId: Scalars['ID']['input'];
  /** The ID of the extra field answer in case of an update */
  id?: InputMaybe<Scalars['ID']['input']>;
  /** The value of the extra field. */
  value: Scalars['String']['input'];
};

export enum FeedbackTypeEnum {
  /** Feedback on cancellation process. */
  Cancellation = 'CANCELLATION',
  /**
   * Deprecated.
   * @deprecated No longer supported type of customer feedback.
   */
  CustomerSatisfaction = 'CUSTOMER_SATISFACTION',
  /** Other feedback type. */
  Other = 'OTHER'
}

/** Autogenerated input type of FulfillOrder */
export type FulfillOrderInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  /** ID of the confirmed or fulfilled order to (re-)fulfill. */
  id: Scalars['ID']['input'];
  /** An optional tracking code for the order that can be included in an email. If a tracking code is provided then the order track and trace email will be sent. Please note: The the same tracking code will not be stored or emailed more than once.  */
  trackingCode?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated input type of FulfillOrders */
export type FulfillOrdersInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  /** ID's of the confirmed order to fulfill. */
  ids: Array<Scalars['ID']['input']>;
};

/** Autogenerated input type of ImportSubscription */
export type ImportSubscriptionInput = {
  /** The time the subscription was activated. */
  activatedAt?: InputMaybe<Scalars['ISO8601DateTime']['input']>;
  /** ID of the plan the subscription will be signed up to. */
  activePlanId?: InputMaybe<Scalars['ID']['input']>;
  /** The customer's address line or street. */
  address?: InputMaybe<Scalars['String']['input']>;
  /** The Adyen shopper reference being used for charges. */
  adyenShopperReference?: InputMaybe<Scalars['String']['input']>;
  /** The customer's billing address address line or street. */
  billToAddress?: InputMaybe<Scalars['String']['input']>;
  /** The customer's billing address city or town. */
  billToCity?: InputMaybe<Scalars['String']['input']>;
  /** The company name of the customer's billing address. */
  billToCompanyName?: InputMaybe<Scalars['String']['input']>;
  /** The customer's billing address country code (ISO3661). */
  billToCountry?: InputMaybe<Scalars['String']['input']>;
  /** The customer's billing address district. */
  billToDistrict?: InputMaybe<Scalars['String']['input']>;
  /** The customer's billing address house, building, or appartment number. */
  billToHouseNumber?: InputMaybe<Scalars['String']['input']>;
  /** The customer's billing address last name. */
  billToLastName?: InputMaybe<Scalars['String']['input']>;
  /** The customer's billing address first name. */
  billToName?: InputMaybe<Scalars['String']['input']>;
  /** The customer's billing address phone number (international format). */
  billToPhoneNumber?: InputMaybe<Scalars['String']['input']>;
  /** The customer's billing address salutation (mr,ms,mx). */
  billToSalutation?: InputMaybe<Scalars['String']['input']>;
  /** The customer's billing address state or province (ISO3661-2). */
  billToState?: InputMaybe<Scalars['String']['input']>;
  /** The customer's billing address zip code or postal code. */
  billToZipcode?: InputMaybe<Scalars['String']['input']>;
  /** The time the subscription started the cancellation process (with two-step cancellation) */
  cancellationStartedAt?: InputMaybe<Scalars['ISO8601DateTime']['input']>;
  /** The time the subscription was (fully) cancelled. */
  cancelledAt?: InputMaybe<Scalars['ISO8601DateTime']['input']>;
  /** The day of the month when the customer is charged. */
  chargeDayOfTheMonth?: InputMaybe<Scalars['Int']['input']>;
  /** The customer's city or town. */
  city?: InputMaybe<Scalars['String']['input']>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  /** The company name of the customer. */
  companyName?: InputMaybe<Scalars['String']['input']>;
  /** The customer's country code (ISO3661). */
  country?: InputMaybe<Scalars['String']['input']>;
  /** The field that can be used for your internal reference. For example, internal customer id. */
  customerReference?: InputMaybe<Scalars['String']['input']>;
  /** The customer's date of birth (yyyy-mm-dd). */
  dateOfBirth?: InputMaybe<Scalars['ISO8601Date']['input']>;
  /** Whether billing and shipping addresses are the same. Set this flag to `true` to store a separate billing address. */
  differentBillingAddress?: InputMaybe<Scalars['Boolean']['input']>;
  /** Discount code to apply to subscription */
  discountCode?: InputMaybe<Scalars['String']['input']>;
  /** The customer's district. */
  district?: InputMaybe<Scalars['String']['input']>;
  /** The customer's email address. */
  email?: InputMaybe<Scalars['String']['input']>;
  /** Extra field values for the subscription. */
  extraFields?: InputMaybe<Array<ExtraFieldInput>>;
  /** The customer's house, building, or appartment number. */
  houseNumber?: InputMaybe<Scalars['String']['input']>;
  /** Unique ID for an imported subscription. */
  importedSubscriptionId?: InputMaybe<Scalars['String']['input']>;
  /** The customer's last name. */
  lastName?: InputMaybe<Scalars['String']['input']>;
  /** The customer's language/locale. Must be enabled on the project. */
  locale?: InputMaybe<Scalars['String']['input']>;
  /** Time time the subscription was marked as non-paying. */
  markedAsNonPayingAt?: InputMaybe<Scalars['ISO8601DateTime']['input']>;
  /** Whether the customer accepted optional marketing communication opt-in. */
  marketingOptIn?: InputMaybe<Scalars['Boolean']['input']>;
  /** Metadata that can be used by developers to store additional information on objects. */
  metadata?: InputMaybe<Scalars['JSON']['input']>;
  /** The Mollie Customer ID (cst_XXX) */
  mollieCustomerId?: InputMaybe<Scalars['String']['input']>;
  /** The customer's first name. */
  name?: InputMaybe<Scalars['String']['input']>;
  /** Moment when the next billing cycle will be run, only available for plan based subscription that use the flexible biling cycle, or subscriptions with one shipment frequency for all products. */
  nextBillingDate?: InputMaybe<Scalars['ISO8601Date']['input']>;
  /** Notes specific for this subscription */
  notes?: InputMaybe<Scalars['String']['input']>;
  /** The customer's phone number (international format). */
  phoneNumber?: InputMaybe<Scalars['String']['input']>;
  /** Additional payment service provider specific properties used for payment creation. */
  pspPaymentProperties?: InputMaybe<Scalars['JSON']['input']>;
  /** The customer's salutation (mr,ms,mx). */
  salutation?: InputMaybe<Scalars['String']['input']>;
  /** The time when the signup was completed. */
  signupCompletedAt?: InputMaybe<Scalars['ISO8601DateTime']['input']>;
  /** Don't automatically activate the subscription on signup. */
  skipAutoActivationOnSignup?: InputMaybe<Scalars['Boolean']['input']>;
  /** The customer's state or province (ISO3661-2). */
  state?: InputMaybe<Scalars['String']['input']>;
  /** The current status of the subscription. (default: inactive) */
  status?: InputMaybe<SubscriptionStatus>;
  /** The Stripe Customer ID (cus_XXX) */
  stripeCustomerId?: InputMaybe<Scalars['String']['input']>;
  /** The Stripe Payment Method ID of the active payment method to charge. (pm_XXX) */
  stripePaymentMethodId?: InputMaybe<Scalars['String']['input']>;
  /** Whether the customer accepted the terms and conditions. */
  termsAccepted?: InputMaybe<Scalars['Boolean']['input']>;
  /** The token of the subscription to update, or creates a new one if one doesn't exist. */
  token?: InputMaybe<Scalars['ID']['input']>;
  /** The number of months before the customer is charged for the first time. */
  trialPeriodMonths?: InputMaybe<Scalars['Int']['input']>;
  /** The company VAT number. */
  vatNumber?: InputMaybe<Scalars['String']['input']>;
  /** The customer's zip code or postal code. */
  zipcode?: InputMaybe<Scalars['String']['input']>;
};

export enum InvoiceStatusEnum {
  /** The invoice payment was cancelled. */
  Cancelled = 'CANCELLED',
  /** The invoice payment has been charged back. */
  ChargedBack = 'CHARGED_BACK',
  /** The invoice payment has expired. */
  Expired = 'EXPIRED',
  /** The invoice payment has failed. */
  Failed = 'FAILED',
  /** The invoice payment is open. */
  Open = 'OPEN',
  /** The invoice has been successfully paid in full. */
  Paid = 'PAID',
  /** The invoice has been successfully paid in full. */
  Paidout = 'PAIDOUT',
  /** The invoice has been partially paid. */
  PartiallyPaid = 'PARTIALLY_PAID',
  /** The invoice has been partially refunded. */
  PartiallyRefunded = 'PARTIALLY_REFUNDED',
  /** The invoice payment is pending. */
  Pending = 'PENDING',
  /** The invoice has been refunded in full. */
  Refunded = 'REFUNDED'
}

export enum LineItemTypeEnum {
  /** Line item for a purchase of an asset */
  AssetPurchase = 'ASSET_PURCHASE',
  /** Line item for a credited amount */
  Credit = 'CREDIT',
  /** Line item for applied discount */
  Discount = 'DISCOUNT',
  /** Line item for an initial payment */
  Initial = 'INITIAL',
  /** Line item for manual invoice description */
  ManualInvoice = 'MANUAL_INVOICE',
  /** Line item charging for a product. */
  Product = 'PRODUCT',
  /** Line item for applied promotion */
  Promotion = 'PROMOTION',
  /** Line item for shipping costs. */
  Shipping = 'SHIPPING',
  /** Line item for subscription, generally for a recurring charge. */
  Subscription = 'SUBSCRIPTION'
}

export enum MaximumCommitmentUnit {
  /** The period in billing cycles */
  BillingCycles = 'BILLING_CYCLES',
  /** The period in days. */
  Days = 'DAYS',
  /** The period in months. */
  Months = 'MONTHS',
  /** The period in weeks. */
  Weeks = 'WEEKS',
  /** The period in years. */
  Years = 'YEARS'
}

export enum OrderStatus {
  /** The order was cancelled. */
  Cancelled = 'CANCELLED',
  /** The order was marked confirmed. */
  Confirmed = 'CONFIRMED',
  /** The order has a draft state as long as the customer didn't complete their signup. */
  Draft = 'DRAFT',
  /** The order was marked fulfilled. */
  Fulfilled = 'FULFILLED',
  /** The order still needs to be accepted by you or the customer. */
  Pending = 'PENDING',
  /** The order was snoozed to be possibly confirmed at a later moment. */
  Snoozed = 'SNOOZED'
}

/** Input type for creating ordered products */
export type OrderedProductInput = {
  /** A custom price in cents for this ordered product, if left blank the default product price will be used */
  customPriceCents?: InputMaybe<Scalars['Int']['input']>;
  /** Id of this ordered product */
  id?: InputMaybe<Scalars['ID']['input']>;
  /** The amount of time in units between shipments of this order */
  interval?: InputMaybe<Scalars['Int']['input']>;
  /** The time measure for interval units */
  intervalUnitOfMeasure?: InputMaybe<Scalars['String']['input']>;
  /** Metadata that can be used by developers to store additional information on objects. */
  metadata?: InputMaybe<Scalars['JSON']['input']>;
  /** ID for the related product */
  productId?: InputMaybe<Scalars['ID']['input']>;
  /** The quantity for this ordered product. */
  quantity?: InputMaybe<Scalars['Int']['input']>;
  /** The next date on which a new order should get initiated */
  shipmentDate?: InputMaybe<Scalars['ISO8601Date']['input']>;
  /** Shopify variant ID for the Firmhouse product */
  shopifyVariantId?: InputMaybe<Scalars['ID']['input']>;
  /** SKU for the related product */
  sku?: InputMaybe<Scalars['String']['input']>;
  /** Slug for the related product */
  slug?: InputMaybe<Scalars['String']['input']>;
};

export enum OrderedProductIntervalUnitOfMeasure {
  /** Days unit of measure */
  Days = 'DAYS',
  /** Use associated product's default unit of measure. */
  Default = 'DEFAULT',
  /** Months unit of measure */
  Months = 'MONTHS',
  /** Weeks unit of measure */
  Weeks = 'WEEKS'
}

export enum OrderedProductStatus {
  /** The ordered product is current actively for the subscription. */
  Active = 'ACTIVE',
  /** The ordered product has been returned */
  Returned = 'RETURNED'
}

export enum OrderedProductTypes {
  /** Regular ordered product */
  Normal = 'NORMAL',
  /** An ordered product that will be added to the order when reaching position 1 in the queue */
  Queued = 'QUEUED',
  /** An additional product will be added to the order */
  QueuedAddon = 'QUEUED_ADDON',
  /** An ordered product that will be added to the order if there is no queued ordered product */
  QueuedDefault = 'QUEUED_DEFAULT',
  /** No order will be created if a skip product is added on position 1 in the queue */
  QueuedSkip = 'QUEUED_SKIP'
}

/** Autogenerated input type of PauseSubscription */
export type PauseSubscriptionInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  /** ID of the subscription to pause. */
  id: Scalars['ID']['input'];
  /** Time from which the subscription automaticaly resumes again. */
  pauseUntil?: InputMaybe<Scalars['ISO8601DateTime']['input']>;
};

export enum PaymentStatusEnum {
  /** The payment was cancelled. */
  Cancelled = 'CANCELLED',
  /** The payment has been charged back. */
  ChargedBack = 'CHARGED_BACK',
  /** The payment has expired. */
  Expired = 'EXPIRED',
  /** The payment has failed. */
  Failed = 'FAILED',
  /** The payment is open. */
  Open = 'OPEN',
  /** The payment has been successfully paid in full. */
  Paid = 'PAID',
  /** The payment has been successfully paid in full. */
  Paidout = 'PAIDOUT',
  /** The payment has been partially refunded. */
  PartiallyRefunded = 'PARTIALLY_REFUNDED',
  /** The payment is pending. */
  Pending = 'PENDING',
  /** The payment has been refunded in full. */
  Refunded = 'REFUNDED'
}

export enum PaymentTypeEnum {
  /** Payment used to update a customers payment method. */
  Authorization = 'AUTHORIZATION',
  /** An on-session payment performed by a customer for a non-recurring invoice. */
  DirectPayment = 'DIRECT_PAYMENT',
  /** Initial payment made directly during checkout. */
  Initial = 'INITIAL',
  /**
   * Externally created recurring payment.
   * @deprecated Recurring payments are not created externally anymore.
   */
  Monthly = 'MONTHLY',
  /** Recurring charge made by our billing cycle. */
  Recurring = 'RECURRING',
  /** An (automated) retry of a failed payment. */
  Retry = 'RETRY',
  /** A non-recurring, portal or API-triggered payment. */
  SingleCharge = 'SINGLE_CHARGE'
}

export enum RefundStatus {
  /** The refund was canceled. */
  Canceled = 'CANCELED',
  /** The refund has failed. For example due to a closed bank or card. The payment service provider will return the amount to your account balance. */
  Failed = 'FAILED',
  /** The refund is sent to the payment service provider. In some payment service providers you can still cancel the refund at this stage. */
  Pending = 'PENDING',
  /** The refund is being processed. */
  Processing = 'PROCESSING',
  /** The refund is queued to be processed. A refund might be in this status when your account balance at the payment provider is not sufficient to initiate the refund at this time. */
  Queued = 'QUEUED',
  /** The refund was succesful and has been settled to your customer. */
  Succeeded = 'SUCCEEDED'
}

/** Autogenerated input type of ResumeSubscription */
export type ResumeSubscriptionInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  /** ID of the subscription to resume. */
  id: Scalars['ID']['input'];
  /** Time to resume the subscription from. If not given the subscription will be immediately resumed. */
  resumeFrom?: InputMaybe<Scalars['ISO8601DateTime']['input']>;
};

/** Input type for adding products to the return order */
export type ReturnOrderProductInput = {
  /** ID of the ordered product the return order is for. */
  orderedProductId: Scalars['ID']['input'];
  /** The number of products to be returned. */
  quantity: Scalars['Int']['input'];
};

export enum ReturnOrderStatus {
  /** The return order has been cancelled */
  Cancelled = 'CANCELLED',
  /** The return order has been completed, the products has been returned. */
  Completed = 'COMPLETED',
  /** The return order is progress and awaiting products to be returned. */
  InProgress = 'IN_PROGRESS'
}

/** Autogenerated input type of ShipOrderedProducts */
export type ShipOrderedProductsInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  /** IDs of the ordered products to ship. */
  ids: Array<Scalars['ID']['input']>;
  /** ID of the subscription attached to the ordered products. */
  subscriptionId: Scalars['ID']['input'];
};

export enum SubscriptionStatus {
  /** The subscription has completed signup process and has been activated. Active subscription. */
  Activated = 'ACTIVATED',
  /** The subscription started but has not completed. cancellation process yet (only for projects with two-step cancellation feature enabled). */
  CancellationInProgress = 'CANCELLATION_IN_PROGRESS',
  /** The subscription has been cancelled. */
  Cancelled = 'CANCELLED',
  /**
   * Deprecated.
   * @deprecated Replaced with CANCELLED and CANCELLATION_IN_PROGRESS statuses.
   */
  CustomerUnsubscribed = 'CUSTOMER_UNSUBSCRIBED',
  /** The subscription (or a cart) created on checkout that has not completed signup process. */
  Draft = 'DRAFT',
  /** The subscription has completed signup process by has not yet been activated (for manual activation strategy). */
  Inactive = 'INACTIVE',
  /** This status can be assigned to customers that do a one-time purchase. */
  OneTimePurchase = 'ONE_TIME_PURCHASE',
  /** The subscription has been paused. */
  Paused = 'PAUSED',
  /** The subscription is marked to be automatically cancelled on the next billing moment after the prepaid commitment ends. */
  PendingCancellation = 'PENDING_CANCELLATION',
  /** The subscription completed first step of two step signup process. */
  PendingCustomerCompletion = 'PENDING_CUSTOMER_COMPLETION',
  /** The subscription has been rejected (for manual activation strategy). */
  Rejected = 'REJECTED',
  /** The subscription was automatically stopped because the maximum plan commitment was reached */
  Stopped = 'STOPPED'
}

/** Autogenerated input type of UndoSubscriptionCancellation */
export type UndoSubscriptionCancellationInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  /** The ID of the cancellation_in_progress subscription to stop cancellation process for, only needed if a project access token is used. */
  id?: InputMaybe<Scalars['ID']['input']>;
  /** The token of the cancellation_in_progress subscription to stop cancellation process for, only needed if a project access token is used. */
  token?: InputMaybe<Scalars['ID']['input']>;
};

/** Autogenerated input type of UpdateAddressDetails */
export type UpdateAddressDetailsInput = {
  /** The time the subscription was activated. */
  activatedAt?: InputMaybe<Scalars['ISO8601DateTime']['input']>;
  /** The customer's address line or street. */
  address?: InputMaybe<Scalars['String']['input']>;
  /** The Adyen shopper reference being used for charges. */
  adyenShopperReference?: InputMaybe<Scalars['String']['input']>;
  /** The customer's billing address address line or street. */
  billToAddress?: InputMaybe<Scalars['String']['input']>;
  /** The customer's billing address city or town. */
  billToCity?: InputMaybe<Scalars['String']['input']>;
  /** The company name of the customer's billing address. */
  billToCompanyName?: InputMaybe<Scalars['String']['input']>;
  /** The customer's billing address country code (ISO3661). */
  billToCountry?: InputMaybe<Scalars['String']['input']>;
  /** The customer's billing address district. */
  billToDistrict?: InputMaybe<Scalars['String']['input']>;
  /** The customer's billing address house, building, or appartment number. */
  billToHouseNumber?: InputMaybe<Scalars['String']['input']>;
  /** The customer's billing address last name. */
  billToLastName?: InputMaybe<Scalars['String']['input']>;
  /** The customer's billing address first name. */
  billToName?: InputMaybe<Scalars['String']['input']>;
  /** The customer's billing address phone number (international format). */
  billToPhoneNumber?: InputMaybe<Scalars['String']['input']>;
  /** The customer's billing address salutation (mr,ms,mx). */
  billToSalutation?: InputMaybe<Scalars['String']['input']>;
  /** The customer's billing address state or province (ISO3661-2). */
  billToState?: InputMaybe<Scalars['String']['input']>;
  /** The customer's billing address zip code or postal code. */
  billToZipcode?: InputMaybe<Scalars['String']['input']>;
  /** The time the subscription started the cancellation process (with two-step cancellation) */
  cancellationStartedAt?: InputMaybe<Scalars['ISO8601DateTime']['input']>;
  /** The time the subscription was (fully) cancelled. */
  cancelledAt?: InputMaybe<Scalars['ISO8601DateTime']['input']>;
  /** The day of the month when the customer is charged. */
  chargeDayOfTheMonth?: InputMaybe<Scalars['Int']['input']>;
  /** The customer's city or town. */
  city?: InputMaybe<Scalars['String']['input']>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  /** The company name of the customer. */
  companyName?: InputMaybe<Scalars['String']['input']>;
  /** The customer's country code (ISO3661). */
  country?: InputMaybe<Scalars['String']['input']>;
  /** The field that can be used for your internal reference. For example, internal customer id. */
  customerReference?: InputMaybe<Scalars['String']['input']>;
  /** The customer's date of birth (yyyy-mm-dd). */
  dateOfBirth?: InputMaybe<Scalars['ISO8601Date']['input']>;
  /** Whether billing and shipping addresses are the same. Set this flag to `true` to store a separate billing address. */
  differentBillingAddress?: InputMaybe<Scalars['Boolean']['input']>;
  /** The customer's district. */
  district?: InputMaybe<Scalars['String']['input']>;
  /** The customer's email address. */
  email?: InputMaybe<Scalars['String']['input']>;
  /** Extra field values for the subscription. */
  extraFields?: InputMaybe<Array<ExtraFieldInput>>;
  /** The customer's house, building, or appartment number. */
  houseNumber?: InputMaybe<Scalars['String']['input']>;
  /** Unique ID for an imported subscription. */
  importedSubscriptionId?: InputMaybe<Scalars['String']['input']>;
  /** The customer's last name. */
  lastName?: InputMaybe<Scalars['String']['input']>;
  /** The customer's language/locale. Must be enabled on the project. */
  locale?: InputMaybe<Scalars['String']['input']>;
  /** Time time the subscription was marked as non-paying. */
  markedAsNonPayingAt?: InputMaybe<Scalars['ISO8601DateTime']['input']>;
  /** Whether the customer accepted optional marketing communication opt-in. */
  marketingOptIn?: InputMaybe<Scalars['Boolean']['input']>;
  /** Metadata that can be used by developers to store additional information on objects. */
  metadata?: InputMaybe<Scalars['JSON']['input']>;
  /** The Mollie Customer ID (cst_XXX) */
  mollieCustomerId?: InputMaybe<Scalars['String']['input']>;
  /** The customer's first name. */
  name?: InputMaybe<Scalars['String']['input']>;
  /** Notes specific for this subscription */
  notes?: InputMaybe<Scalars['String']['input']>;
  /** The customer's phone number (international format). */
  phoneNumber?: InputMaybe<Scalars['String']['input']>;
  /** Additional payment service provider specific properties used for payment creation. */
  pspPaymentProperties?: InputMaybe<Scalars['JSON']['input']>;
  /** The customer's salutation (mr,ms,mx). */
  salutation?: InputMaybe<Scalars['String']['input']>;
  /** The time when the signup was completed. */
  signupCompletedAt?: InputMaybe<Scalars['ISO8601DateTime']['input']>;
  /** Don't automatically activate the subscription on signup. */
  skipAutoActivationOnSignup?: InputMaybe<Scalars['Boolean']['input']>;
  /** The customer's state or province (ISO3661-2). */
  state?: InputMaybe<Scalars['String']['input']>;
  /** The current status of the subscription. (default: inactive) */
  status?: InputMaybe<SubscriptionStatus>;
  /** The Stripe Customer ID (cus_XXX) */
  stripeCustomerId?: InputMaybe<Scalars['String']['input']>;
  /** The Stripe Payment Method ID of the active payment method to charge. (pm_XXX) */
  stripePaymentMethodId?: InputMaybe<Scalars['String']['input']>;
  /** Whether the customer accepted the terms and conditions. */
  termsAccepted?: InputMaybe<Scalars['Boolean']['input']>;
  /** The token of the subscription to update, or creates a new one if one doesn't exist. */
  token?: InputMaybe<Scalars['ID']['input']>;
  /** The number of months before the customer is charged for the first time. */
  trialPeriodMonths?: InputMaybe<Scalars['Int']['input']>;
  /** The company VAT number. */
  vatNumber?: InputMaybe<Scalars['String']['input']>;
  /** The customer's zip code or postal code. */
  zipcode?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated input type of UpdateAppliedPromotion */
export type UpdateAppliedPromotionInput = {
  /** Whether this promotion should actively be used for this subscription. */
  active?: InputMaybe<Scalars['Boolean']['input']>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  /** The maximum discount amount in cents that this promotion should provide.Only applicable when using the VALUE deactivation strategy. */
  deactivateAfterAmountIncludingTaxCents?: InputMaybe<Scalars['Int']['input']>;
  /** After how mamy times used this applied promotion should get deactivated.Only applicable when using the TIMES deactivation strategy. */
  deactivateAfterTimes?: InputMaybe<Scalars['Int']['input']>;
  id: Scalars['ID']['input'];
};

/** Autogenerated input type of UpdateAssetOwnership */
export type UpdateAssetOwnershipInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['ID']['input'];
  purchasePriceCents?: InputMaybe<Scalars['Int']['input']>;
};

/** Autogenerated input type of UpdateInvoice */
export type UpdateInvoiceInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  /** An external invoice URL to replace the default invoice. */
  externalUrl?: InputMaybe<Scalars['String']['input']>;
  /** ID of the invoice to update. */
  id: Scalars['ID']['input'];
};

/** Autogenerated input type of UpdateInvoiceLineItem */
export type UpdateInvoiceLineItemInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  /** The description of this invoice line item. */
  description?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['ID']['input'];
  /** Indicates what this line item is charging for */
  lineItemType?: InputMaybe<LineItemTypeEnum>;
  /** Quantity for this line item */
  quantity?: InputMaybe<Scalars['Int']['input']>;
  /** Unit price in cents */
  unitPriceCents?: InputMaybe<Scalars['Int']['input']>;
};

/** Autogenerated input type of UpdateOrder */
export type UpdateOrderInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  /** The timestamp of when the order was fulfilled. Pass an empty string to clear existing timestamp. */
  fulfilledAt?: InputMaybe<Scalars['String']['input']>;
  /** ID of the order to update. */
  id: Scalars['ID']['input'];
  /** Order status. */
  status?: InputMaybe<OrderStatus>;
  /** Tracking code for the order that can be included in an email. Please note: tracking email will not get sent. Use FulfillOrder mutation if you also want to send out tracking email with the new tracking code. */
  trackingCode?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated input type of UpdateOrderedProduct */
export type UpdateOrderedProductInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  /** A custom price in cents for this ordered product, if left blank the default product price will be used */
  customPriceCents?: InputMaybe<Scalars['Int']['input']>;
  /** ID of this ordered product. This will be ignored on create action. */
  id?: InputMaybe<Scalars['ID']['input']>;
  /** The amount of time in units between shipments of this order */
  interval?: InputMaybe<Scalars['Int']['input']>;
  /** The time measure for interval units. This argument is deprecated. Use intervalUnitOfMeasureType instead. If intervalUnitOfMeasureType passed, this field will be ignored. */
  intervalUnitOfMeasure?: InputMaybe<Scalars['String']['input']>;
  /** The time measure for interval units */
  intervalUnitOfMeasureType?: InputMaybe<OrderedProductIntervalUnitOfMeasure>;
  /** Metadata that can be used by developers to store additional information on objects. */
  metadata?: InputMaybe<Scalars['JSON']['input']>;
  /** ID for the related product */
  productId?: InputMaybe<Scalars['ID']['input']>;
  /** The quantity for this ordered product. */
  quantity?: InputMaybe<Scalars['Int']['input']>;
  /** The next date on which a new order should get initiated */
  shipmentDate?: InputMaybe<Scalars['ISO8601Date']['input']>;
};

/** Autogenerated input type of UpdateOrderedProductQuantity */
export type UpdateOrderedProductQuantityInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  orderedProduct?: InputMaybe<OrderedProductInput>;
};

/** Autogenerated input type of UpdatePlan */
export type UpdatePlanInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  planSlug: Scalars['String']['input'];
};

/** Autogenerated input type of UpdateProduct */
export type UpdateProductInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  eligibleForDiscount?: InputMaybe<Scalars['Boolean']['input']>;
  graceCancellationEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  graceCancellationPeriod?: InputMaybe<Scalars['Int']['input']>;
  graceCancellationUnit?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['ID']['input'];
  initialShipmentDelay?: InputMaybe<Scalars['Int']['input']>;
  initialShipmentDelayUnitOfMeasure?: InputMaybe<Scalars['String']['input']>;
  interval?: InputMaybe<Scalars['Int']['input']>;
  intervalUnitOfMeasure?: InputMaybe<Scalars['String']['input']>;
  maximumCommitmentEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  maximumCommitmentPeriod?: InputMaybe<Scalars['Int']['input']>;
  maximumCommitmentUnit?: InputMaybe<Scalars['String']['input']>;
  /** Metadata that can be used by developers to store additional information on objects. */
  metadata?: InputMaybe<Scalars['JSON']['input']>;
  minimumCommitmentEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  minimumCommitmentPeriod?: InputMaybe<Scalars['Int']['input']>;
  minimumCommitmentUnit?: InputMaybe<Scalars['String']['input']>;
  priceCents?: InputMaybe<Scalars['Int']['input']>;
  productType?: InputMaybe<Scalars['String']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  supplier?: InputMaybe<Scalars['String']['input']>;
  taxRateId?: InputMaybe<Scalars['ID']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated input type of UpdatePromotion */
export type UpdatePromotionInput = {
  /** Whether or not this promotion will automatically be applied on checkout */
  autoApply?: InputMaybe<Scalars['Boolean']['input']>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  /** The amount (in cents) after which the promotion should get deactivated on a customer */
  deactivateAfterAmountIncludingTaxCents?: InputMaybe<Scalars['Int']['input']>;
  /** After how many times this promotion is "used up" for a customer */
  deactivateAfterTimes?: InputMaybe<Scalars['Int']['input']>;
  /** Which mechanism will be used to deactivate the promotion */
  deactivationStrategy?: InputMaybe<AppliedPromotionDeactivationStrategy>;
  id: Scalars['ID']['input'];
  /** The percentage of discount that this promotion gives. */
  percentDiscount?: InputMaybe<Scalars['Int']['input']>;
  /** Alternative name to be displayed on invoices and checkout. */
  publicName?: InputMaybe<Scalars['String']['input']>;
  /** The title of the promotion as it will appear on invoices and in the portal. */
  title?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated input type of UpdateReturnOrder */
export type UpdateReturnOrderInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  externalReference?: InputMaybe<Scalars['String']['input']>;
  externalStatus?: InputMaybe<Scalars['String']['input']>;
  externalUrl?: InputMaybe<Scalars['String']['input']>;
  id: Scalars['ID']['input'];
  intervalUnitOfMeasure?: InputMaybe<Scalars['String']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  returnDate?: InputMaybe<Scalars['ISO8601Date']['input']>;
  returnOrderProducts?: InputMaybe<Array<ReturnOrderProductInput>>;
  trackingCode?: InputMaybe<Scalars['String']['input']>;
  trackingUrl?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated input type of UpdateSubscribedPlan */
export type UpdateSubscribedPlanInput = {
  /** The interval at which the billing cycle runs according to the unit set in billingCycleIntervalUnit. */
  billingCycleInterval?: InputMaybe<Scalars['Int']['input']>;
  /** The unit of the interval the billing cycle runs */
  billingCycleIntervalUnit?: InputMaybe<BillingCycleIntervalUnit>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  /** A custom initial amount different from the default plan initial amount */
  customInitialAmountCents?: InputMaybe<Scalars['Int']['input']>;
  /** A custom recurring amount different from the default plan price. */
  customRecurringAmountCents?: InputMaybe<Scalars['Int']['input']>;
  /** The ID of the SubscribedPlan to update. */
  id: Scalars['ID']['input'];
  /** The new date at which the next billing cycle will occur. */
  nextBillingDate?: InputMaybe<Scalars['ISO8601Date']['input']>;
  /** The new plan associated the subscription should change to. */
  planId?: InputMaybe<Scalars['ID']['input']>;
  /** The unit of the interval defining the trial period length set in trialPeriodInterval */
  trialPeriodPeriod?: InputMaybe<Scalars['Int']['input']>;
  /** The interval defining trial period length according to the unit set in trialPeriodIntervalUnit. */
  trialPeriodUnit?: InputMaybe<BillingCycleIntervalUnit>;
};

/** Autogenerated input type of UpdateSubscription */
export type UpdateSubscriptionInput = {
  /** The time the subscription was activated. */
  activatedAt?: InputMaybe<Scalars['ISO8601DateTime']['input']>;
  /** The customer's address line or street. */
  address?: InputMaybe<Scalars['String']['input']>;
  /** The Adyen shopper reference being used for charges. */
  adyenShopperReference?: InputMaybe<Scalars['String']['input']>;
  /** The customer's billing address address line or street. */
  billToAddress?: InputMaybe<Scalars['String']['input']>;
  /** The customer's billing address city or town. */
  billToCity?: InputMaybe<Scalars['String']['input']>;
  /** The company name of the customer's billing address. */
  billToCompanyName?: InputMaybe<Scalars['String']['input']>;
  /** The customer's billing address country code (ISO3661). */
  billToCountry?: InputMaybe<Scalars['String']['input']>;
  /** The customer's billing address district. */
  billToDistrict?: InputMaybe<Scalars['String']['input']>;
  /** The customer's billing address house, building, or appartment number. */
  billToHouseNumber?: InputMaybe<Scalars['String']['input']>;
  /** The customer's billing address last name. */
  billToLastName?: InputMaybe<Scalars['String']['input']>;
  /** The customer's billing address first name. */
  billToName?: InputMaybe<Scalars['String']['input']>;
  /** The customer's billing address phone number (international format). */
  billToPhoneNumber?: InputMaybe<Scalars['String']['input']>;
  /** The customer's billing address salutation (mr,ms,mx). */
  billToSalutation?: InputMaybe<Scalars['String']['input']>;
  /** The customer's billing address state or province (ISO3661-2). */
  billToState?: InputMaybe<Scalars['String']['input']>;
  /** The customer's billing address zip code or postal code. */
  billToZipcode?: InputMaybe<Scalars['String']['input']>;
  /** The time the subscription started the cancellation process (with two-step cancellation) */
  cancellationStartedAt?: InputMaybe<Scalars['ISO8601DateTime']['input']>;
  /** The time the subscription was (fully) cancelled. */
  cancelledAt?: InputMaybe<Scalars['ISO8601DateTime']['input']>;
  /** The day of the month when the customer is charged. */
  chargeDayOfTheMonth?: InputMaybe<Scalars['Int']['input']>;
  /** The customer's city or town. */
  city?: InputMaybe<Scalars['String']['input']>;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  /** The company name of the customer. */
  companyName?: InputMaybe<Scalars['String']['input']>;
  /** The customer's country code (ISO3661). */
  country?: InputMaybe<Scalars['String']['input']>;
  /** The field that can be used for your internal reference. For example, internal customer id. */
  customerReference?: InputMaybe<Scalars['String']['input']>;
  /** The customer's date of birth (yyyy-mm-dd). */
  dateOfBirth?: InputMaybe<Scalars['ISO8601Date']['input']>;
  /** Whether billing and shipping addresses are the same. Set this flag to `true` to store a separate billing address. */
  differentBillingAddress?: InputMaybe<Scalars['Boolean']['input']>;
  /** The customer's district. */
  district?: InputMaybe<Scalars['String']['input']>;
  /** The customer's email address. */
  email?: InputMaybe<Scalars['String']['input']>;
  /** Extra field values for the subscription. */
  extraFields?: InputMaybe<Array<ExtraFieldInput>>;
  /** The customer's house, building, or appartment number. */
  houseNumber?: InputMaybe<Scalars['String']['input']>;
  /** Unique ID for an imported subscription. */
  importedSubscriptionId?: InputMaybe<Scalars['String']['input']>;
  /** The customer's last name. */
  lastName?: InputMaybe<Scalars['String']['input']>;
  /** The customer's language/locale. Must be enabled on the project. */
  locale?: InputMaybe<Scalars['String']['input']>;
  /** Time time the subscription was marked as non-paying. */
  markedAsNonPayingAt?: InputMaybe<Scalars['ISO8601DateTime']['input']>;
  /** Whether the customer accepted optional marketing communication opt-in. */
  marketingOptIn?: InputMaybe<Scalars['Boolean']['input']>;
  /** Metadata that can be used by developers to store additional information on objects. */
  metadata?: InputMaybe<Scalars['JSON']['input']>;
  /** The Mollie Customer ID (cst_XXX) */
  mollieCustomerId?: InputMaybe<Scalars['String']['input']>;
  /** The customer's first name. */
  name?: InputMaybe<Scalars['String']['input']>;
  /** Notes specific for this subscription */
  notes?: InputMaybe<Scalars['String']['input']>;
  /** The customer's phone number (international format). */
  phoneNumber?: InputMaybe<Scalars['String']['input']>;
  /** Additional payment service provider specific properties used for payment creation. */
  pspPaymentProperties?: InputMaybe<Scalars['JSON']['input']>;
  /** The customer's salutation (mr,ms,mx). */
  salutation?: InputMaybe<Scalars['String']['input']>;
  /** The time when the signup was completed. */
  signupCompletedAt?: InputMaybe<Scalars['ISO8601DateTime']['input']>;
  /** Don't automatically activate the subscription on signup. */
  skipAutoActivationOnSignup?: InputMaybe<Scalars['Boolean']['input']>;
  /** The customer's state or province (ISO3661-2). */
  state?: InputMaybe<Scalars['String']['input']>;
  /** The current status of the subscription. (default: inactive) */
  status?: InputMaybe<SubscriptionStatus>;
  /** The Stripe Customer ID (cus_XXX) */
  stripeCustomerId?: InputMaybe<Scalars['String']['input']>;
  /** The Stripe Payment Method ID of the active payment method to charge. (pm_XXX) */
  stripePaymentMethodId?: InputMaybe<Scalars['String']['input']>;
  /** Whether the customer accepted the terms and conditions. */
  termsAccepted?: InputMaybe<Scalars['Boolean']['input']>;
  /** The token of the subscription to update, or creates a new one if one doesn't exist. */
  token?: InputMaybe<Scalars['ID']['input']>;
  /** The number of months before the customer is charged for the first time. */
  trialPeriodMonths?: InputMaybe<Scalars['Int']['input']>;
  /** The company VAT number. */
  vatNumber?: InputMaybe<Scalars['String']['input']>;
  /** The customer's zip code or postal code. */
  zipcode?: InputMaybe<Scalars['String']['input']>;
};

export type AllProductsQueryVariables = Exact<{
  id?: InputMaybe<Scalars['ID']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
  shopifyVariantId?: InputMaybe<Scalars['String']['input']>;
  updatedSince?: InputMaybe<Scalars['ISO8601DateTime']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
}>;


export type AllProductsQuery = { products?: { nodes?: Array<{ id: string, title: string, sku?: string | null, imageUrl?: string | null, priceCents?: number | null, available: boolean, interval?: number | null, intervalUnitOfMeasure?: string | null, priceIncludingTaxCents?: number | null, taxPercentage?: number | null, taxAmountCents?: number | null, productType?: string | null } | null> | null } | null };

export type CreateCartMutationVariables = Exact<{
  input: CreateCartInput;
}>;


export type CreateCartMutation = { createCart?: { subscription: { token?: string | null, status: SubscriptionStatus, currency?: string | null, amountForStartingSubscriptionCents?: number | null, monthlyAmountCents?: number | null, checkoutUrl?: string | null, subscribedPlan?: { name: string, showInPriceBreakDown: boolean, billingCycleIntervalUnit?: BillingCycleIntervalUnit | null, billingCycleInterval?: number | null } | null, activePlan?: { id: string, monthlyAmountCents?: number | null } | null, orderedProducts?: Array<{ id: string, quantity?: number | null, totalAmountIncludingTaxCents?: number | null, recurring: boolean, plan?: { id: string } | null, product: { id: string, title: string, sku?: string | null, imageUrl?: string | null, priceCents?: number | null, available: boolean, interval?: number | null, intervalUnitOfMeasure?: string | null, priceIncludingTaxCents?: number | null, taxPercentage?: number | null, taxAmountCents?: number | null, productType?: string | null } }> | null } } | null };

export type GetSubscriptionQueryVariables = Exact<{
  token: Scalars['ID']['input'];
  includeCheckoutDetails?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type GetSubscriptionQuery = { getSubscription?: { token?: string | null, status: SubscriptionStatus, currency?: string | null, amountForStartingSubscriptionCents?: number | null, monthlyAmountCents?: number | null, checkoutUrl?: string | null, email?: string | null, name?: string | null, lastName?: string | null, phoneNumber?: string | null, dateOfBirth?: string | null, address?: string | null, houseNumber?: string | null, zipcode?: string | null, city?: string | null, country?: string | null, district?: string | null, termsAccepted?: boolean, subscribedPlan?: { name: string, showInPriceBreakDown: boolean, billingCycleIntervalUnit?: BillingCycleIntervalUnit | null, billingCycleInterval?: number | null } | null, activePlan?: { id: string, monthlyAmountCents?: number | null } | null, orderedProducts?: Array<{ id: string, quantity?: number | null, totalAmountIncludingTaxCents?: number | null, recurring: boolean, plan?: { id: string } | null, product: { id: string, title: string, sku?: string | null, imageUrl?: string | null, priceCents?: number | null, available: boolean, interval?: number | null, intervalUnitOfMeasure?: string | null, priceIncludingTaxCents?: number | null, taxPercentage?: number | null, taxAmountCents?: number | null, productType?: string | null } }> | null } | null };

export type AddToCartMutationVariables = Exact<{
  input: CreateOrderedProductInput;
}>;


export type AddToCartMutation = { createOrderedProduct?: { subscription?: { token?: string | null, status: SubscriptionStatus, currency?: string | null, amountForStartingSubscriptionCents?: number | null, monthlyAmountCents?: number | null, checkoutUrl?: string | null, subscribedPlan?: { name: string, showInPriceBreakDown: boolean, billingCycleIntervalUnit?: BillingCycleIntervalUnit | null, billingCycleInterval?: number | null } | null, activePlan?: { id: string, monthlyAmountCents?: number | null } | null, orderedProducts?: Array<{ id: string, quantity?: number | null, totalAmountIncludingTaxCents?: number | null, recurring: boolean, plan?: { id: string } | null, product: { id: string, title: string, sku?: string | null, imageUrl?: string | null, priceCents?: number | null, available: boolean, interval?: number | null, intervalUnitOfMeasure?: string | null, priceIncludingTaxCents?: number | null, taxPercentage?: number | null, taxAmountCents?: number | null, productType?: string | null } }> | null } | null, orderedProduct?: { id: string, quantity?: number | null, totalAmountIncludingTaxCents?: number | null, recurring: boolean, plan?: { id: string } | null, product: { id: string, title: string, sku?: string | null, imageUrl?: string | null, priceCents?: number | null, available: boolean, interval?: number | null, intervalUnitOfMeasure?: string | null, priceIncludingTaxCents?: number | null, taxPercentage?: number | null, taxAmountCents?: number | null, productType?: string | null } } | null } | null };

export type RemoveFromCartMutationVariables = Exact<{
  input: DestroyOrderedProductInput;
}>;


export type RemoveFromCartMutation = { destroyOrderedProduct?: { subscription?: { token?: string | null, status: SubscriptionStatus, currency?: string | null, amountForStartingSubscriptionCents?: number | null, monthlyAmountCents?: number | null, checkoutUrl?: string | null, subscribedPlan?: { name: string, showInPriceBreakDown: boolean, billingCycleIntervalUnit?: BillingCycleIntervalUnit | null, billingCycleInterval?: number | null } | null, activePlan?: { id: string, monthlyAmountCents?: number | null } | null, orderedProducts?: Array<{ id: string, quantity?: number | null, totalAmountIncludingTaxCents?: number | null, recurring: boolean, plan?: { id: string } | null, product: { id: string, title: string, sku?: string | null, imageUrl?: string | null, priceCents?: number | null, available: boolean, interval?: number | null, intervalUnitOfMeasure?: string | null, priceIncludingTaxCents?: number | null, taxPercentage?: number | null, taxAmountCents?: number | null, productType?: string | null } }> | null } | null, orderedProduct?: { id: string, quantity?: number | null, totalAmountIncludingTaxCents?: number | null, recurring: boolean, plan?: { id: string } | null, product: { id: string, title: string, sku?: string | null, imageUrl?: string | null, priceCents?: number | null, available: boolean, interval?: number | null, intervalUnitOfMeasure?: string | null, priceIncludingTaxCents?: number | null, taxPercentage?: number | null, taxAmountCents?: number | null, productType?: string | null } } | null } | null };

export type UpdateOrderedProductQuantityMutationVariables = Exact<{
  input: UpdateOrderedProductQuantityInput;
}>;


export type UpdateOrderedProductQuantityMutation = { updateOrderedProductQuantity?: { orderedProduct?: { id: string, quantity?: number | null, totalAmountIncludingTaxCents?: number | null, recurring: boolean, plan?: { id: string } | null, product: { id: string, title: string, sku?: string | null, imageUrl?: string | null, priceCents?: number | null, available: boolean, interval?: number | null, intervalUnitOfMeasure?: string | null, priceIncludingTaxCents?: number | null, taxPercentage?: number | null, taxAmountCents?: number | null, productType?: string | null } } | null, subscription?: { token?: string | null, status: SubscriptionStatus, currency?: string | null, amountForStartingSubscriptionCents?: number | null, monthlyAmountCents?: number | null, checkoutUrl?: string | null, subscribedPlan?: { name: string, showInPriceBreakDown: boolean, billingCycleIntervalUnit?: BillingCycleIntervalUnit | null, billingCycleInterval?: number | null } | null, activePlan?: { id: string, monthlyAmountCents?: number | null } | null, orderedProducts?: Array<{ id: string, quantity?: number | null, totalAmountIncludingTaxCents?: number | null, recurring: boolean, plan?: { id: string } | null, product: { id: string, title: string, sku?: string | null, imageUrl?: string | null, priceCents?: number | null, available: boolean, interval?: number | null, intervalUnitOfMeasure?: string | null, priceIncludingTaxCents?: number | null, taxPercentage?: number | null, taxAmountCents?: number | null, productType?: string | null } }> | null } | null } | null };


export const AllProductsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"allProducts"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"sku"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"shopifyVariantId"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"updatedSince"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ISO8601DateTime"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"after"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"before"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"last"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"first"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"products"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}},{"kind":"Argument","name":{"kind":"Name","value":"sku"},"value":{"kind":"Variable","name":{"kind":"Name","value":"sku"}}},{"kind":"Argument","name":{"kind":"Name","value":"shopifyVariantId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"shopifyVariantId"}}},{"kind":"Argument","name":{"kind":"Name","value":"updatedSince"},"value":{"kind":"Variable","name":{"kind":"Name","value":"updatedSince"}}},{"kind":"Argument","name":{"kind":"Name","value":"after"},"value":{"kind":"Variable","name":{"kind":"Name","value":"after"}}},{"kind":"Argument","name":{"kind":"Name","value":"before"},"value":{"kind":"Variable","name":{"kind":"Name","value":"before"}}},{"kind":"Argument","name":{"kind":"Name","value":"last"},"value":{"kind":"Variable","name":{"kind":"Name","value":"last"}}},{"kind":"Argument","name":{"kind":"Name","value":"first"},"value":{"kind":"Variable","name":{"kind":"Name","value":"first"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nodes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"sku"}},{"kind":"Field","name":{"kind":"Name","value":"imageUrl"}},{"kind":"Field","name":{"kind":"Name","value":"priceCents"}},{"kind":"Field","name":{"kind":"Name","value":"available"}},{"kind":"Field","name":{"kind":"Name","value":"interval"}},{"kind":"Field","name":{"kind":"Name","value":"intervalUnitOfMeasure"}},{"kind":"Field","name":{"kind":"Name","value":"priceIncludingTaxCents"}},{"kind":"Field","name":{"kind":"Name","value":"taxPercentage"}},{"kind":"Field","name":{"kind":"Name","value":"taxAmountCents"}},{"kind":"Field","name":{"kind":"Name","value":"productType"}}]}}]}}]}}]} as unknown as DocumentNode<AllProductsQuery, AllProductsQueryVariables>;
export const CreateCartDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"createCart"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"CreateCartInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"createCart"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"subscription"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"token"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"currency"}},{"kind":"Field","name":{"kind":"Name","value":"amountForStartingSubscriptionCents"}},{"kind":"Field","name":{"kind":"Name","value":"monthlyAmountCents"}},{"kind":"Field","name":{"kind":"Name","value":"checkoutUrl"}},{"kind":"Field","name":{"kind":"Name","value":"subscribedPlan"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"showInPriceBreakDown"}},{"kind":"Field","name":{"kind":"Name","value":"billingCycleIntervalUnit"}},{"kind":"Field","name":{"kind":"Name","value":"billingCycleInterval"}}]}},{"kind":"Field","name":{"kind":"Name","value":"activePlan"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"monthlyAmountCents"}}]}},{"kind":"Field","name":{"kind":"Name","value":"orderedProducts"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"quantity"}},{"kind":"Field","name":{"kind":"Name","value":"totalAmountIncludingTaxCents"}},{"kind":"Field","name":{"kind":"Name","value":"recurring"}},{"kind":"Field","name":{"kind":"Name","value":"plan"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}},{"kind":"Field","name":{"kind":"Name","value":"product"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"sku"}},{"kind":"Field","name":{"kind":"Name","value":"imageUrl"}},{"kind":"Field","name":{"kind":"Name","value":"priceCents"}},{"kind":"Field","name":{"kind":"Name","value":"available"}},{"kind":"Field","name":{"kind":"Name","value":"interval"}},{"kind":"Field","name":{"kind":"Name","value":"intervalUnitOfMeasure"}},{"kind":"Field","name":{"kind":"Name","value":"priceIncludingTaxCents"}},{"kind":"Field","name":{"kind":"Name","value":"taxPercentage"}},{"kind":"Field","name":{"kind":"Name","value":"taxAmountCents"}},{"kind":"Field","name":{"kind":"Name","value":"productType"}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<CreateCartMutation, CreateCartMutationVariables>;
export const GetSubscriptionDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"getSubscription"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"token"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"includeCheckoutDetails"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Boolean"}},"defaultValue":{"kind":"BooleanValue","value":false}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"getSubscription"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"token"},"value":{"kind":"Variable","name":{"kind":"Name","value":"token"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"token"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"currency"}},{"kind":"Field","name":{"kind":"Name","value":"amountForStartingSubscriptionCents"}},{"kind":"Field","name":{"kind":"Name","value":"monthlyAmountCents"}},{"kind":"Field","name":{"kind":"Name","value":"checkoutUrl"}},{"kind":"Field","name":{"kind":"Name","value":"subscribedPlan"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"showInPriceBreakDown"}},{"kind":"Field","name":{"kind":"Name","value":"billingCycleIntervalUnit"}},{"kind":"Field","name":{"kind":"Name","value":"billingCycleInterval"}}]}},{"kind":"Field","name":{"kind":"Name","value":"activePlan"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"monthlyAmountCents"}}]}},{"kind":"Field","name":{"kind":"Name","value":"orderedProducts"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"quantity"}},{"kind":"Field","name":{"kind":"Name","value":"totalAmountIncludingTaxCents"}},{"kind":"Field","name":{"kind":"Name","value":"recurring"}},{"kind":"Field","name":{"kind":"Name","value":"plan"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}},{"kind":"Field","name":{"kind":"Name","value":"product"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"sku"}},{"kind":"Field","name":{"kind":"Name","value":"imageUrl"}},{"kind":"Field","name":{"kind":"Name","value":"priceCents"}},{"kind":"Field","name":{"kind":"Name","value":"available"}},{"kind":"Field","name":{"kind":"Name","value":"interval"}},{"kind":"Field","name":{"kind":"Name","value":"intervalUnitOfMeasure"}},{"kind":"Field","name":{"kind":"Name","value":"priceIncludingTaxCents"}},{"kind":"Field","name":{"kind":"Name","value":"taxPercentage"}},{"kind":"Field","name":{"kind":"Name","value":"taxAmountCents"}},{"kind":"Field","name":{"kind":"Name","value":"productType"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"email"},"directives":[{"kind":"Directive","name":{"kind":"Name","value":"include"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"if"},"value":{"kind":"Variable","name":{"kind":"Name","value":"includeCheckoutDetails"}}}]}]},{"kind":"Field","name":{"kind":"Name","value":"name"},"directives":[{"kind":"Directive","name":{"kind":"Name","value":"include"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"if"},"value":{"kind":"Variable","name":{"kind":"Name","value":"includeCheckoutDetails"}}}]}]},{"kind":"Field","name":{"kind":"Name","value":"lastName"},"directives":[{"kind":"Directive","name":{"kind":"Name","value":"include"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"if"},"value":{"kind":"Variable","name":{"kind":"Name","value":"includeCheckoutDetails"}}}]}]},{"kind":"Field","name":{"kind":"Name","value":"phoneNumber"},"directives":[{"kind":"Directive","name":{"kind":"Name","value":"include"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"if"},"value":{"kind":"Variable","name":{"kind":"Name","value":"includeCheckoutDetails"}}}]}]},{"kind":"Field","name":{"kind":"Name","value":"dateOfBirth"},"directives":[{"kind":"Directive","name":{"kind":"Name","value":"include"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"if"},"value":{"kind":"Variable","name":{"kind":"Name","value":"includeCheckoutDetails"}}}]}]},{"kind":"Field","name":{"kind":"Name","value":"address"},"directives":[{"kind":"Directive","name":{"kind":"Name","value":"include"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"if"},"value":{"kind":"Variable","name":{"kind":"Name","value":"includeCheckoutDetails"}}}]}]},{"kind":"Field","name":{"kind":"Name","value":"houseNumber"},"directives":[{"kind":"Directive","name":{"kind":"Name","value":"include"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"if"},"value":{"kind":"Variable","name":{"kind":"Name","value":"includeCheckoutDetails"}}}]}]},{"kind":"Field","name":{"kind":"Name","value":"zipcode"},"directives":[{"kind":"Directive","name":{"kind":"Name","value":"include"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"if"},"value":{"kind":"Variable","name":{"kind":"Name","value":"includeCheckoutDetails"}}}]}]},{"kind":"Field","name":{"kind":"Name","value":"city"},"directives":[{"kind":"Directive","name":{"kind":"Name","value":"include"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"if"},"value":{"kind":"Variable","name":{"kind":"Name","value":"includeCheckoutDetails"}}}]}]},{"kind":"Field","name":{"kind":"Name","value":"country"},"directives":[{"kind":"Directive","name":{"kind":"Name","value":"include"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"if"},"value":{"kind":"Variable","name":{"kind":"Name","value":"includeCheckoutDetails"}}}]}]},{"kind":"Field","name":{"kind":"Name","value":"district"},"directives":[{"kind":"Directive","name":{"kind":"Name","value":"include"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"if"},"value":{"kind":"Variable","name":{"kind":"Name","value":"includeCheckoutDetails"}}}]}]},{"kind":"Field","name":{"kind":"Name","value":"termsAccepted"},"directives":[{"kind":"Directive","name":{"kind":"Name","value":"include"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"if"},"value":{"kind":"Variable","name":{"kind":"Name","value":"includeCheckoutDetails"}}}]}]}]}}]}}]} as unknown as DocumentNode<GetSubscriptionQuery, GetSubscriptionQueryVariables>;
export const AddToCartDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"addToCart"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"CreateOrderedProductInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"createOrderedProduct"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"subscription"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"token"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"currency"}},{"kind":"Field","name":{"kind":"Name","value":"amountForStartingSubscriptionCents"}},{"kind":"Field","name":{"kind":"Name","value":"monthlyAmountCents"}},{"kind":"Field","name":{"kind":"Name","value":"checkoutUrl"}},{"kind":"Field","name":{"kind":"Name","value":"subscribedPlan"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"showInPriceBreakDown"}},{"kind":"Field","name":{"kind":"Name","value":"billingCycleIntervalUnit"}},{"kind":"Field","name":{"kind":"Name","value":"billingCycleInterval"}}]}},{"kind":"Field","name":{"kind":"Name","value":"activePlan"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"monthlyAmountCents"}}]}},{"kind":"Field","name":{"kind":"Name","value":"orderedProducts"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"quantity"}},{"kind":"Field","name":{"kind":"Name","value":"totalAmountIncludingTaxCents"}},{"kind":"Field","name":{"kind":"Name","value":"recurring"}},{"kind":"Field","name":{"kind":"Name","value":"plan"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}},{"kind":"Field","name":{"kind":"Name","value":"product"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"sku"}},{"kind":"Field","name":{"kind":"Name","value":"imageUrl"}},{"kind":"Field","name":{"kind":"Name","value":"priceCents"}},{"kind":"Field","name":{"kind":"Name","value":"available"}},{"kind":"Field","name":{"kind":"Name","value":"interval"}},{"kind":"Field","name":{"kind":"Name","value":"intervalUnitOfMeasure"}},{"kind":"Field","name":{"kind":"Name","value":"priceIncludingTaxCents"}},{"kind":"Field","name":{"kind":"Name","value":"taxPercentage"}},{"kind":"Field","name":{"kind":"Name","value":"taxAmountCents"}},{"kind":"Field","name":{"kind":"Name","value":"productType"}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"orderedProduct"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"quantity"}},{"kind":"Field","name":{"kind":"Name","value":"totalAmountIncludingTaxCents"}},{"kind":"Field","name":{"kind":"Name","value":"recurring"}},{"kind":"Field","name":{"kind":"Name","value":"plan"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}},{"kind":"Field","name":{"kind":"Name","value":"product"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"sku"}},{"kind":"Field","name":{"kind":"Name","value":"imageUrl"}},{"kind":"Field","name":{"kind":"Name","value":"priceCents"}},{"kind":"Field","name":{"kind":"Name","value":"available"}},{"kind":"Field","name":{"kind":"Name","value":"interval"}},{"kind":"Field","name":{"kind":"Name","value":"intervalUnitOfMeasure"}},{"kind":"Field","name":{"kind":"Name","value":"priceIncludingTaxCents"}},{"kind":"Field","name":{"kind":"Name","value":"taxPercentage"}},{"kind":"Field","name":{"kind":"Name","value":"taxAmountCents"}},{"kind":"Field","name":{"kind":"Name","value":"productType"}}]}}]}}]}}]}}]} as unknown as DocumentNode<AddToCartMutation, AddToCartMutationVariables>;
export const RemoveFromCartDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"removeFromCart"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"DestroyOrderedProductInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"destroyOrderedProduct"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"subscription"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"token"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"currency"}},{"kind":"Field","name":{"kind":"Name","value":"amountForStartingSubscriptionCents"}},{"kind":"Field","name":{"kind":"Name","value":"monthlyAmountCents"}},{"kind":"Field","name":{"kind":"Name","value":"checkoutUrl"}},{"kind":"Field","name":{"kind":"Name","value":"subscribedPlan"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"showInPriceBreakDown"}},{"kind":"Field","name":{"kind":"Name","value":"billingCycleIntervalUnit"}},{"kind":"Field","name":{"kind":"Name","value":"billingCycleInterval"}}]}},{"kind":"Field","name":{"kind":"Name","value":"activePlan"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"monthlyAmountCents"}}]}},{"kind":"Field","name":{"kind":"Name","value":"orderedProducts"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"quantity"}},{"kind":"Field","name":{"kind":"Name","value":"totalAmountIncludingTaxCents"}},{"kind":"Field","name":{"kind":"Name","value":"recurring"}},{"kind":"Field","name":{"kind":"Name","value":"plan"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}},{"kind":"Field","name":{"kind":"Name","value":"product"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"sku"}},{"kind":"Field","name":{"kind":"Name","value":"imageUrl"}},{"kind":"Field","name":{"kind":"Name","value":"priceCents"}},{"kind":"Field","name":{"kind":"Name","value":"available"}},{"kind":"Field","name":{"kind":"Name","value":"interval"}},{"kind":"Field","name":{"kind":"Name","value":"intervalUnitOfMeasure"}},{"kind":"Field","name":{"kind":"Name","value":"priceIncludingTaxCents"}},{"kind":"Field","name":{"kind":"Name","value":"taxPercentage"}},{"kind":"Field","name":{"kind":"Name","value":"taxAmountCents"}},{"kind":"Field","name":{"kind":"Name","value":"productType"}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"orderedProduct"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"quantity"}},{"kind":"Field","name":{"kind":"Name","value":"totalAmountIncludingTaxCents"}},{"kind":"Field","name":{"kind":"Name","value":"recurring"}},{"kind":"Field","name":{"kind":"Name","value":"plan"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}},{"kind":"Field","name":{"kind":"Name","value":"product"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"sku"}},{"kind":"Field","name":{"kind":"Name","value":"imageUrl"}},{"kind":"Field","name":{"kind":"Name","value":"priceCents"}},{"kind":"Field","name":{"kind":"Name","value":"available"}},{"kind":"Field","name":{"kind":"Name","value":"interval"}},{"kind":"Field","name":{"kind":"Name","value":"intervalUnitOfMeasure"}},{"kind":"Field","name":{"kind":"Name","value":"priceIncludingTaxCents"}},{"kind":"Field","name":{"kind":"Name","value":"taxPercentage"}},{"kind":"Field","name":{"kind":"Name","value":"taxAmountCents"}},{"kind":"Field","name":{"kind":"Name","value":"productType"}}]}}]}}]}}]}}]} as unknown as DocumentNode<RemoveFromCartMutation, RemoveFromCartMutationVariables>;
export const UpdateOrderedProductQuantityDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"updateOrderedProductQuantity"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"UpdateOrderedProductQuantityInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"updateOrderedProductQuantity"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"orderedProduct"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"quantity"}},{"kind":"Field","name":{"kind":"Name","value":"totalAmountIncludingTaxCents"}},{"kind":"Field","name":{"kind":"Name","value":"recurring"}},{"kind":"Field","name":{"kind":"Name","value":"plan"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}},{"kind":"Field","name":{"kind":"Name","value":"product"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"sku"}},{"kind":"Field","name":{"kind":"Name","value":"imageUrl"}},{"kind":"Field","name":{"kind":"Name","value":"priceCents"}},{"kind":"Field","name":{"kind":"Name","value":"available"}},{"kind":"Field","name":{"kind":"Name","value":"interval"}},{"kind":"Field","name":{"kind":"Name","value":"intervalUnitOfMeasure"}},{"kind":"Field","name":{"kind":"Name","value":"priceIncludingTaxCents"}},{"kind":"Field","name":{"kind":"Name","value":"taxPercentage"}},{"kind":"Field","name":{"kind":"Name","value":"taxAmountCents"}},{"kind":"Field","name":{"kind":"Name","value":"productType"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"subscription"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"token"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"currency"}},{"kind":"Field","name":{"kind":"Name","value":"amountForStartingSubscriptionCents"}},{"kind":"Field","name":{"kind":"Name","value":"monthlyAmountCents"}},{"kind":"Field","name":{"kind":"Name","value":"checkoutUrl"}},{"kind":"Field","name":{"kind":"Name","value":"subscribedPlan"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"showInPriceBreakDown"}},{"kind":"Field","name":{"kind":"Name","value":"billingCycleIntervalUnit"}},{"kind":"Field","name":{"kind":"Name","value":"billingCycleInterval"}}]}},{"kind":"Field","name":{"kind":"Name","value":"activePlan"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"monthlyAmountCents"}}]}},{"kind":"Field","name":{"kind":"Name","value":"orderedProducts"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"quantity"}},{"kind":"Field","name":{"kind":"Name","value":"totalAmountIncludingTaxCents"}},{"kind":"Field","name":{"kind":"Name","value":"recurring"}},{"kind":"Field","name":{"kind":"Name","value":"plan"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}},{"kind":"Field","name":{"kind":"Name","value":"product"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"sku"}},{"kind":"Field","name":{"kind":"Name","value":"imageUrl"}},{"kind":"Field","name":{"kind":"Name","value":"priceCents"}},{"kind":"Field","name":{"kind":"Name","value":"available"}},{"kind":"Field","name":{"kind":"Name","value":"interval"}},{"kind":"Field","name":{"kind":"Name","value":"intervalUnitOfMeasure"}},{"kind":"Field","name":{"kind":"Name","value":"priceIncludingTaxCents"}},{"kind":"Field","name":{"kind":"Name","value":"taxPercentage"}},{"kind":"Field","name":{"kind":"Name","value":"taxAmountCents"}},{"kind":"Field","name":{"kind":"Name","value":"productType"}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<UpdateOrderedProductQuantityMutation, UpdateOrderedProductQuantityMutationVariables>;